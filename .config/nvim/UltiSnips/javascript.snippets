priority 100
snippet rfC "React Simple Functional Component"
import React from 'react';

const ${1:Component} = () => (
  <div>$1</div>
);

export default $1;
endsnippet

snippet rfc "React Functional Component"
import React from 'react';

const ${1:Component} = () => {
  return (
    <div>$1</div>
  );
};

export default $1;
endsnippet

snippet rit "React Inline Tag"
<$1 />
endsnippet

snippet rt "React Tag"
<$1>
  $2
</$1>
endsnippet

snippet ir "Import React"
import React from 'react';
endsnippet

snippet im "Import"
import $2 from '$1';
endsnippet

snippet sc "create styled component"
const $1 = styled.$2\`
  $3
\`;
endsnippet

snippet frg "React fragment"
<>
  $1
</>
endsnippet

snippet sct "Self Closing tag"
<$1 />
endsnippet

snippet oct "Open Close tag"
<$1>
  $2
</$1>
endsnippet

snippet arf "arrow function"
($1) => {$2}
endsnippet

snippet cl "console log"
console.log($1)
endsnippet

snippet fun "function"
function $1($2) {
  $3
}
endsnippet

snippet try "try catch"
try {
  $1
} catch (error) {
  $2
}
endsnippet

snippet if "if"
if ($1) {
  $2
}
endsnippet

snippet ust "useState"
const [$1, $2] = useState($3);
endsnippet

snippet uef "useEffect"
useEffect(
  () => {
    $1
  },
  [$2]
);
endsnippet

snippet uref "useRef"
const $1 = useRef($2);
endsnippet
